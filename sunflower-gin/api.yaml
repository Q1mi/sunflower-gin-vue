openapi: 3.0.0
components:
  schemas:
    backend.api.user.v1.LoginReq:
      properties:
        username:
          description: 用户名
          format: string
          maxLength: 12
          minLength: 3
          type: string
        password:
          description: 密码
          format: string
          maxLength: 16
          minLength: 6
          type: string
      required:
        - username
        - password
      type: object
    backend.api.user.v1.LoginRes:
      properties:
        accessToken:
          description: 访问令牌
          format: string
          type: string
        refreshToken:
          description: 刷新令牌
          format: string
          type: string
      type: object
    backend.api.user.v1.RefreshTokenReq:
      properties:
        refreshToken:
          description: 刷新令牌
          format: string
          type: string
      required:
        - refreshToken
      type: object
    backend.api.user.v1.RefreshTokenRes:
      properties:
        accessToken:
          description: 访问令牌
          format: string
          type: string
        refreshToken:
          description: 刷新令牌
          format: string
          type: string
      type: object
    backend.api.checkin.v1.DailyReq:
      properties: {}
      type: object
    backend.api.checkin.v1.DailyRes:
      properties: {}
      type: object
    backend.api.checkin.v1.CalendarReq:
      properties:
        yearMonth:
          format: string
          type: string
      required:
        - yearMonth
      type: object
    backend.api.checkin.v1.CalendarRes:
      properties:
        year:
          format: int
          type: integer
        month:
          format: int
          type: integer
        detail:
          $ref: '#/components/schemas/backend.api.checkin.v1.DetailInfo'
          description: ''
      type: object
    backend.api.checkin.v1.DetailInfo:
      properties:
        checkedInDays:
          format: '[]int'
          items:
            format: int
            type: integer
          type: array
        retroCheckedInDays:
          format: '[]int'
          items:
            format: int
            type: integer
          type: array
        isCheckedInToday:
          format: bool
          type: boolean
        remainRetroTimes:
          format: int
          type: integer
        consecutiveDays:
          format: int
          type: integer
      type: object
    backend.api.checkin.v1.RetroReq:
      properties:
        date:
          format: string
          type: string
      required:
        - date
      type: object
    backend.api.checkin.v1.RetroRes:
      properties: {}
      type: object
    backend.api.hello.v1.HelloReq:
      properties: {}
      type: object
    backend.api.hello.v1.HelloRes:
      example: string
      properties: {}
      type: object
    backend.api.points.v1.RecordsReq:
      properties:
        limit:
          default: 10
          description: 分页大小，默认为10
          format: int
          type: integer
        offset:
          default: 0
          description: 分页偏移
          format: int
          type: integer
      type: object
    backend.api.points.v1.RecordsRes:
      properties:
        total:
          format: int
          type: integer
        hasMore:
          format: bool
          type: boolean
        list:
          format: '[]*v1.Record'
          items:
            $ref: '#/components/schemas/backend.api.points.v1.Record'
            description: ''
          type: array
      type: object
    backend.api.points.v1.Record:
      properties:
        pointsChange:
          format: int64
          type: integer
        transactionType:
          format: int
          type: integer
        description:
          format: string
          type: string
        transactionTime:
          format: string
          type: string
      type: object
    backend.api.points.v1.SummaryReq:
      properties: {}
      type: object
    backend.api.points.v1.SummaryRes:
      properties:
        total:
          format: int
          type: integer
      type: object
    backend.api.user.v1.CreateReq:
      properties:
        username:
          description: 用户名
          format: string
          maxLength: 12
          minLength: 3
          type: string
        email:
          description: 邮箱
          format: string
          type: string
        password:
          description: 密码
          format: string
          maxLength: 16
          minLength: 6
          type: string
        confirmPassword:
          description: 确认密码
          format: string
          type: string
      required:
        - username
        - email
        - password
        - confirmPassword
      type: object
    backend.api.user.v1.CreateRes:
      properties:
        userId:
          description: 用户ID
          format: uint64
          type: integer
        username:
          description: 用户名
          format: string
          type: string
      type: object
    backend.api.user.v1.MeReq:
      properties: {}
      type: object
    backend.api.user.v1.MeRes:
      properties:
        username:
          format: string
          type: string
        email:
          format: string
          type: string
        avatar:
          format: string
          type: string
      type: object
info:
  title: ''
  version: ''
paths:
  /api/v1/auth/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.api.user.v1.LoginReq'
              description: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.api.user.v1.LoginRes'
                description: ''
          description: ''
      summary: 登录
      tags:
        - 用户模块
  /api/v1/auth/refresh:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.api.user.v1.RefreshTokenReq'
              description: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.api.user.v1.RefreshTokenRes'
                description: ''
          description: ''
      summary: 刷新令牌
      tags:
        - 用户模块
  /api/v1/checkins:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.api.checkin.v1.DailyReq'
              description: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.api.checkin.v1.DailyRes'
                description: ''
          description: ''
      summary: 每日签到
      tags:
        - 签到
  /api/v1/checkins/calendar:
    get:
      parameters:
        - in: query
          name: yearMonth
          required: true
          schema:
            format: string
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.api.checkin.v1.CalendarRes'
                description: ''
          description: ''
      summary: 获取签到日历
      tags:
        - 签到
  /api/v1/checkins/retroactive:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.api.checkin.v1.RetroReq'
              description: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.api.checkin.v1.RetroRes'
                description: ''
          description: ''
      summary: 补签
      tags:
        - 签到
  /api/v1/hello:
    get:
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/backend.api.hello.v1.HelloRes'
                description: ''
          description: ''
      summary: You first hello api
      tags:
        - Hello
  /api/v1/points/records:
    get:
      parameters:
        - description: 分页大小，默认为10
          in: query
          name: limit
          schema:
            default: 10
            description: 分页大小，默认为10
            format: int
            type: integer
        - description: 分页偏移
          in: query
          name: offset
          schema:
            default: 0
            description: 分页偏移
            format: int
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.api.points.v1.RecordsRes'
                description: ''
          description: ''
      summary: 积分明细
      tags:
        - 积分
  /api/v1/points/summary:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.api.points.v1.SummaryRes'
                description: ''
          description: ''
      summary: 总积分
      tags:
        - 积分
  /api/v1/users:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.api.user.v1.CreateReq'
              description: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.api.user.v1.CreateRes'
                description: ''
          description: ''
      summary: 创建用户
      tags:
        - 用户模块
  /api/v1/users/me:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.api.user.v1.MeRes'
                description: ''
          description: ''
      summary: 获取当前登录的用户信息
      tags:
        - 用户模块
